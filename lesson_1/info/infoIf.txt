Условные операторы: if, '?'

        Оператор if («если») 
                var year = prompt('В каком году появилась спецификация ECMA-262 5.1?', '');

                if (year != 2011) alert( 'А вот и неправильно!' ); // Так можно указывать, если одно условие.

                if (year != 2011) {
                        alert( 'А вот..' );
                        alert( '..и неправильно!' );
                } // Так указывается, когда команд больше одной. И лучше всегда указывать фигурные скобки.
        
        Преобразование к логическому типу
                Оператор if (...) вычисляет и преобразует выражение в скобках к логическому типу.
                В логическом контексте:
                        Число 0, пустая строка "", null и undefined, а также NaN являются false,
                        Остальные значения – true.
                                Например, такое условие никогда не выполнится:
                                        if (0) { // 0 преобразуется к false
                                                ...
                                        }
                                …А такое – выполнится всегда:
                                        if (1) { // 1 преобразуется к true
                                                ...
                                        }
                                Можно и просто передать уже готовое логическое значение, к примеру, заранее вычисленное 
                                в переменной:
                                        var cond = (year != 2011); // true/false
                                        if (cond) {
                                                ...
                                        }

        Неверное условие, else
                Необязательный блок else («иначе») выполняется, если условие неверно:
                        var year = prompt('Введите год появления стандарта ECMA-262 5.1', '');

                        if (year == 2011) {
                                alert( 'Да вы знаток!' );
                        } else {
                                alert( 'А вот и неправильно!' ); // любое значение, кроме 2011
                        }
        
        Несколько условий, else if
                Бывает нужно проверить несколько вариантов условия. Для этого используется блок else if .... 
                        var year = prompt('В каком году появилась спецификация ECMA-262 5.1?', '');

                        if (year < 2011) {
                                alert( 'Это слишком рано..' );
                        } else if (year > 2011) {
                                alert( 'Это поздновато..' );
                        } else {
                                alert( 'Да, точно в этом году!' );
                        }
                        В примере выше JavaScript сначала проверит первое условие, если оно ложно – перейдет ко второму – и так 
                        далее, до последнего else.

        Оператор вопросительный знак „?“
                Иногда нужно в зависимости от условия присвоить переменную.
                        var access;
                        var age = prompt('Сколько вам лет?', '');

                        if (age > 14) {
                                access = true;
                        } else {
                                access = false;
                        }

                        alert(access);
                Этот пример можно сделать и проще:
                        условие ? значение1 : значение2
                        access = (age > 14) ? true : false;
                Оператор '?' выполняется позже большинства других, в частности – позже сравнений, поэтому скобки можно не ставить:
                        access = age > 14 ? true : false;
                …Но когда скобки есть – код лучше читается. Так что рекомендуется их писать.

                В данном случае можно было бы обойтись и без оператора '?', т.к. сравнение само по себе уже возвращает true/false:
                        access = age > 14; // true/false:

«Тернарный оператор»
Вопросительный знак – единственный оператор, у которого есть аж три аргумента, в то время как у обычных операторов их один-два. 
Поэтому его называют «тернарный оператор».

        Несколько операторов „?“
                Последовательность операторов '?' позволяет вернуть значение в зависимости не от одного условия, а от нескольких.
                        var age = prompt('возраст?', 18);

                        var message = (age < 3) ? 'Здравствуй, малыш!' :
                                (age < 18) ? 'Привет!' :
                                (age < 100) ? 'Здравствуйте!' :
                                'Какой необычный возраст!';

                        alert( message );

                То же самое через if..else:

                        if (age < 3) {
                                message = 'Здравствуй, малыш!';
                        } else if (age < 18) {
                                message = 'Привет!';
                        } else if (age < 100) {
                                message = 'Здравствуйте!';
                        } else {
                                message = 'Какой необычный возраст!';
                        }

        Нетрадиционное использование „?“
                Иногда оператор вопросительный знак '?' используют как замену if:
                        var company = prompt('Какая компания создала JavaScript?', '');

                        (company == 'Netscape') ?
                                alert('Да, верно') : alert('Неправильно');

                        Рекомендуется не использовать вопросительный знак таким образом.
                        Вот, для сравнения, то же самое с if:

                                var company = prompt('Какая компания создала JavaScript?', '');

                                if (company == 'Netscape') {
                                        alert('Да, верно');
                                } else {
                                        alert('Неправильно');
                                }
// ========================================================================================================= // 

