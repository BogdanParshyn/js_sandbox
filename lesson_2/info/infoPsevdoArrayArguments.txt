Псевдомассив аргументов "arguments"

        В JavaScript любая функция может быть вызвана с произвольным количеством аргументов.
                function go(a,b) {
                    alert("a="+a+", b="+b);
                }

                go(1);     // a=1, b=undefined
                go(1,2);   // a=1, b=2
                go(1,2,3); // a=1, b=2, третий аргумент не вызовет ошибку
        
        В JavaScript нет «перегрузки» функций
        В некоторых языках программист может создать две функции с одинаковым именем, но разным набором аргументов, 
        а при вызове интерпретатор сам выберет нужную.

        Может быть только одна функция с именем log, которая вызывается с любыми аргументами.
        А уже внутри она может посмотреть, с чем вызвана и по-разному отработать.
    
    Доступ к «лишним» аргументам
        Доступ к ним осуществляется через «псевдо-массив» arguments.
        Он содержит список аргументов по номерам: arguments[0], arguments[1]…, а также свойство length.
                function sayHi() {
                    for (var i = 0; i < arguments.length; i++) {
                        alert( "Привет, " + arguments[i] );
                }
                }

                sayHi("Винни", "Пятачок"); // 'Привет, Винни', 'Привет, Пятачок'
        
        Связь между arguments и параметрами 
        В результате изменения arguments влияют на параметры и наоборот.
                function f(x) {
                    arguments[0] = 5; // меняет переменную x
                    alert( x ); // 5
                }

                f(1);
            Наоборот:
                function f(x) {
                    x = 5;
                    alert( arguments[0] ); // 5, обновленный x
                }

                f(1);

            В современной редакции стандарта это поведение изменено. Аргументы отделены от локальных переменных:
                function f(x) {
                    "use strict"; // для браузеров с поддержкой строгого режима

                    arguments[0] = 5;
                    alert( x ); // не 5, а 1! Переменная "отвязана" от arguments
                }

                f(1);
            Если вы не используете строгий режим, то чтобы переменные не менялись «неожиданно», 
            рекомендуется никогда не изменять arguments.

        arguments – это не массив
            Частая ошибка новичков – попытка применить методы Array к arguments.
            Дело в том, что arguments – это не массив Array.

            В действительности, это обычный объект, просто ключи числовые и есть length. На этом сходство заканчивается. 
            Никаких особых методов у него нет, и методы массивов он тоже не поддерживает.

        Cделать обычный массив из arguments:
                var args = [];
                for (var i = 0; i < arguments.length; i++) {
                    args[i] = arguments[i];
                }
                                    
// =========================================================================================================== //
   
// =========================================================================================================== //

    
